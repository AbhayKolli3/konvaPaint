{"ast":null,"code":"var _jsxFileName = \"/Users/abhaykolli/Documents/code/konva_assign/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport Konva from 'konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    var width = window.innerWidth;\n    var height = window.innerHeight - 25;\n\n    // first we need Konva core things: stage and layer\n    var stage = new Konva.Stage({\n      container: 'container',\n      width: width,\n      height: height\n    });\n    var layer = new Konva.Layer();\n    stage.add(layer);\n    var isPaint = false;\n    var mode = 'brush';\n    var lastLine;\n    stage.on('mousedown touchstart', function (e) {\n      isPaint = true;\n      var pos = stage.getPointerPosition();\n      var lastLine = new Konva.Line({\n        stroke: '#df4b26',\n        strokeWidth: 5,\n        globalCompositeOperation: mode === 'brush' ? 'source-over' : 'destination-out',\n        // round cap for smoother lines\n        lineCap: 'round',\n        lineJoin: 'round',\n        // add point twice, so we have some drawings even on a simple click\n        points: [pos.x, pos.y, pos.x, pos.y]\n      });\n      layer.add(lastLine);\n    });\n    stage.on('mouseup touchend', function () {\n      isPaint = false;\n    });\n\n    // and core function - drawing\n    stage.on('mousemove touchmove', function (e) {\n      if (!isPaint) {\n        return;\n      }\n\n      // prevent scrolling on touch devices\n      e.evt.preventDefault();\n      const pos = stage.getPointerPosition();\n      var newPoints = lastLine.points().concat([pos.x, pos.y]);\n      lastLine.points(newPoints);\n    });\n    var select = document.getElementById('tool');\n    select === null || select === void 0 ? void 0 : select.addEventListener('change', function () {\n      mode = select === null || select === void 0 ? void 0 : select.value;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"tool\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"brush\",\n        children: \"Brush\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"eraser\",\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), \"Hello\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Konva","jsxDEV","_jsxDEV","App","_s","width","window","innerWidth","height","innerHeight","stage","Stage","container","layer","Layer","add","isPaint","mode","lastLine","on","e","pos","getPointerPosition","Line","stroke","strokeWidth","globalCompositeOperation","lineCap","lineJoin","points","x","y","evt","preventDefault","newPoints","concat","select","document","getElementById","addEventListener","value","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhaykolli/Documents/code/konva_assign/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Konva from 'konva';\n\nfunction App() {\n  useEffect(()=>{\n    var width = window.innerWidth;\n    var height = window.innerHeight - 25;\n\n    // first we need Konva core things: stage and layer\n    var stage = new Konva.Stage({\n      container: 'container',\n      width: width,\n      height: height,\n    });\n\n    var layer = new Konva.Layer();\n    stage.add(layer);\n\n    var isPaint = false;\n    var mode = 'brush';\n    var lastLine: { points: (arg0: undefined) => any[]; };\n\n    stage.on('mousedown touchstart', function (e) {\n      isPaint = true;\n      var pos = stage.getPointerPosition();\n      var lastLine = new Konva.Line({\n        stroke: '#df4b26',\n        strokeWidth: 5,\n        globalCompositeOperation:\n          mode === 'brush' ? 'source-over' : 'destination-out',\n        // round cap for smoother lines\n        lineCap: 'round',\n        lineJoin: 'round',\n        // add point twice, so we have some drawings even on a simple click\n        points: [pos.x, pos.y, pos.x, pos.y],\n      });\n      layer.add(lastLine);\n    });\n\n    stage.on('mouseup touchend', function () {\n      isPaint = false;\n    });\n\n    // and core function - drawing\n    stage.on('mousemove touchmove', function (e) {\n      if (!isPaint) {\n        return;\n      }\n\n      // prevent scrolling on touch devices\n      e.evt.preventDefault();\n\n      const pos = stage.getPointerPosition();\n      var newPoints = lastLine.points().concat([pos.x, pos.y]);\n      lastLine.points(newPoints);\n    });\n\n    var select = document.getElementById('tool') as HTMLInputElement;\n    select?.addEventListener('change', function () {\n      mode = select?.value;\n    });\n  },[])\n\n\n\n  \n  return (\n    <div id=\"container\" className=\"App\">\n          <select id=\"tool\">\n      <option value=\"brush\">Brush</option>\n      <option value=\"eraser\">Eraser</option>\n    </select>\n      Hello\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}